<template>
	<div class="taskList">
		<div class="header"></div>
        <van-nav-bar title="任务记录" left-arrow  @click-left="leftBack"/>
        <van-tabs v-model="status" @change="handleTabClick" background="transparent" color="#3B6AF1" line-width="35px" line-height="2px" title-active-color="#3B6AF1">
            <van-tab title="全部" name=""></van-tab>
            <van-tab title="进行中" name="1"></van-tab>
            <van-tab title="审核中" name="2"></van-tab>
            <van-tab title="审核失败" name="4"></van-tab>
            <van-tab title="已完成" name="3"></van-tab>
        </van-tabs>
        <div class="task-box">
            <!-- <template > -->
                <van-list v-model="loading" :finished="finished" @load="getData" :finished-text="data && data.length > 0 ? '没有更多了' : ''" >
                    <template >
                        <div class="task-group" v-for="(item,index) in data" :key="index" >
                            <div class="task-card">
                                <div style="padding: 0 10px;" @click="toDetail(item)">
                                    <div class="top-name van-hairline--bottom" >
                                        <span class="time">{{ item.add_time }}</span>
                                        <!-- <template v-if="item.status != 4"> -->
                                            <span  class="status-name" :style="item.status == 1 ? 'color:#ff6010' : ''">{{ item.status_name }}</span>
                                        <!-- </template> -->
                                        <!-- <template v-else>
                                            <img src="https://ljj-dom.oss-cn-beijing.aliyuncs.com/xfd/xuanshang/order-finish.png" alt="">
                                        </template> -->
                                    </div>
                                    <div class="task-item-con">
                                        <div class="task-item">
                                            <div class="label">领取ID：</div>
                                            <div class="val">{{item.reward_make_id}}</div>
                                        </div>
                                        <div class="task-item">
                                            <div class="label">任务名称：</div>
                                            <div class="val">{{item.title}}</div>
                                        </div>
                                        <div class="task-item">
                                            <div class="label">任务收益：</div>
                                            <div class="val price">{{item.price}}</div>
                                        </div>
                                        <div class="task-item" v-if="item.status == 2">
                                            <div class="label">提交时间：</div>
                                            <div class="val">{{item.update_time}}</div>
                                        </div>
                                        <div class="task-item" v-if="item.status == 4">
                                            <div class="label">失败原因</div>
                                            <div class="val price">{{item.note}}</div>
                                        </div>
                                        <div class="task-item" v-if="item.status == 1">
                                            <div class="label">任务倒计时：</div>
                                            <div class="val">
                                                <van-count-down :time="item.yu_time*1000">
                                                    <template #default="timeData">
                                                        <span class="block">{{ timeData.days }}</span>
                                                        <span class="colon">天</span>
                                                        <span class="block">{{ timeData.hours }}</span>
                                                        <span class="colon">时</span>
                                                        <span class="block">{{ timeData.minutes }}</span>
                                                        <span class="colon">分</span>
                                                        <span class="block">{{ timeData.seconds }}</span>
                                                        <span class="colon">秒</span>
                                                    </template>
                                                </van-count-down>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="btn-con">
                                        <div style="flex:1"></div>
                                        <div class="btn">
                                            <van-button plain round size="small"  type="primary" @click.stop="toTaskDetail(item)">任务详情</van-button>
                                            <template v-if="item.status == 1">
                                                <van-button plain round size="small" type="warning" @click.stop="giveUpTask(item,index)">放弃任务</van-button>
                                                <van-button plain round size="small" type="info" @click.stop="toDetail(item)">提交</van-button>
                                            </template>
                                            <template v-if="item.status == 4">
                                                <!-- <van-button plain round size="small" type="info" @click.stop="toDetail(item)">重新提交</van-button> -->
                                                <van-button plain round size="small" type="info" @click.stop="toTaskDetail(item)">再来一单</van-button>
                                            </template>
                                            <template v-if="item.status == 3">
                                                <van-button plain round size="small" type="default" @click.stop="toEvaluate">评价</van-button>
                                                <van-button plain round size="small" type="info" @click.stop="toTaskDetail(item)">再来一单</van-button>
                                            </template>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>  
                    </template>
                </van-list>
            <!-- </template> -->
            <template v-if="!loading && (!data || data.length === 0)">
                <van-empty class="custom-image" :image="isErr ? 'network' : 'https://img01.yzcdn.cn/vant/custom-empty-image.png'" :description="isErr ? '服务异常,请稍后重试' : ('暂无'+ (statusTit && statusTit != '全部' ? '【'+statusTit+'】的任务' : '已领取的任务'))">
                    <template v-if="isErr">
                        <van-button round type="danger" class="bottom-button" @click="getData">重新加载</van-button>
                    </template>
                    <template v-else>
                        <van-button round type="info" class="bottom-button" @click="toTaskHall">前往任务大厅</van-button>
                    </template>
                </van-empty>
            </template>
        </div>
	</div>
</template>
<script>
	export default {
		name: "taskList",
		data() {
			return {
                loading: false,
                finished: false,
                isErr: false,
                page: 0,
                size: 10,
                data: [],
                status: '',
                statusTit: ''
			};
		},
		mounted() {
            this.status = this.$route.query.status
            if (this.status == 1) {
                this.statusTit = '进行中'
            } else if (this.status == 2) {
                this.statusTit = '审核中'
            } else if (this.status == 3) {
                this.statusTit = '审核失败'
            } else if (this.status == 4) {
                this.statusTit = '已完成'
            } else if (this.status == 5) {
                this.statusTit = '已取消'
            } else {
                this.statusTit = ''
            }
            this.getData()
		},
		methods: {
            leftBack() {
				this.$router.push('/taskCenter');
            },
            // 切换任务完成状态
            handleTabClick(name, title) {
                this.page = 0
                this.data = [];
                this.status = name;
                this.statusTit = title
                this.getData()
            },
            getData () {
                this.finished = false
				let page = this.page + 1
                this.loading = true
                this.isErr = false
				this.$api.userRewardLists({
					page: page,
                    size: this.size,
                    status: this.status
				}).then(res => {
					this.loading = false
					if (res.errno == 0) {
						// res.data.data = [{
                        //     add_time: '2021-06-07 12:15:30',
                        //     status: 1,
                        //     status_name: '进行中',
                        //     title: '测试进行中任务1',
                        //     price: '8',
                        //     date: '',
                        //     time: 30 * 60 * 60 * 1000,
                        // },{
                        //     add_time: '2021-06-07 12:15:30',
                        //     status: 2,
                        //     status_name: '审核中',
                        //     title: '测试审核中任务1',
                        //     price: '8',
                        //     date: '',
                        //     time: 30 * 60 * 60 * 1000,
                        // },{
                        //     add_time: '2021-06-07 12:15:30',
                        //     status: 3,
                        //     status_name: '审核失败',
                        //     title: '测试审核失败任务1',
                        //     price: '8',
                        //     date: '',
                        //     errNote: '拒绝原因1111111',
                        //     time: 30 * 60 * 60 * 1000,
                        // },{
                        //     add_time: '2021-06-07 12:15:30',
                        //     status: 1,
                        //     status_name: '进行中',
                        //     title: '测试进行中任务2',
                        //     price: '8',
                        //     date: '',
                        //     time: 30 * 60 * 60 * 1000,
                        // },{
                        //     add_time: '2021-06-07 12:15:30',
                        //     status: 4,
                        //     status_name: '已完成',
                        //     title: '测试已完成任务1',
                        //     price: '8',
                        //     date: '',
                        //     time: 30 * 60 * 60 * 1000,
                        // },{
                        //     add_time: '2021-06-07 12:15:30',
                        //     status: 5,
                        //     status_name: '已取消',
                        //     title: '测试已完成任务1',
                        //     price: '8',
                        //     date: '',
                        //     time: 30 * 60 * 60 * 1000,
                        // }]
                        // res.data.totalPage = 1
                        res.data.data.forEach(item =>{
                            if (item.status == 1) {
                                item.status_name = '进行中'
                            } else if (item.status == 2) {
                                item.status_name = '审核中'
                            } else if (item.status == 3) {
                                item.status_name = '已完成'
                            } else if (item.status == 4) {
                                item.status_name = '不合格'
                            } else if (item.status == 5) {
                                item.status_name = '已取消'
                            } 
                        })
						let data = res.data.data
						if (data && data.length > 0) {
							if (page == 1) {
								this.data = data
							} else {
								this.data = this.data.concat(data)
							}
						}
						this.page = page
						if (this.page >= res.data.total) {
							this.finished = true
						} else {
							this.finished = false
						}
					} else {
						this.$toast(res.errmsg)	
						this.finished = true
                        this.page = 0
                        this.data = []
					}
				}).catch(err=>{
					this.$toast('服务异常,请稍后重试')
					this.loading = false
					this.finished = true
                    this.page = 0
                    this.data = []
					this.isErr = true
				})
            },
            // 前往提交详情
            toDetail (item) {
                let params = {
                    title: item.title,
                    status: item.status,
                    status_name: item.status_name,
                    price: item.price,
                    make_pic: item.make_pic,
                    make_content: item.make_content,
                    note: item.note
                }
                this.$router.push({
                    path: '/submitTask',
                    query: {
                        lastPath: '/taskList',
                        reward_make_id: item.reward_make_id,
                        detail: JSON.stringify(params)
                    }
                })
            },
            // 前往任务详情
            toTaskDetail (item) {
                this.$router.push({
                    path: '/taskDetail',
                    query: {
                        id: item.reward_id,
                        lastPath: '/taskList'
                    }
                })
            },
            // 放弃任务
            giveUpTask (item,index) {
                this.$dialog.confirm({
                    title: '提示',
                    message: '确定放弃该任务吗?',
                    })
                    .then(() => {
                        this.gibeUpApi(item,index)
                        // on confirm
                    })
                    .catch(() => {
                        // on cancel
                });
            },
            gibeUpApi (item,index) {
                this.$api.userRewardDel({
					reward_make_id: item.reward_make_id
				}).then(res => {
					if (res.errno == 0) {
                        this.$toast('任务已放弃')
                        this.data.splice(index,1)
					} else {
						this.$toast(res.errmsg)	
					}
				}).catch(err=>{
					this.$toast('服务异常,请稍后重试')
				})
            },
            // 提交任务
            submit () {
                this.$router.push({
                    path: '/submitTask',
                    query: {
                        lastPath: '/taskList'
                    }
                })
            },
            // 评价
            toEvaluate () {
                this.$toast('点击了评价')
            },
            // 再来一单
            addTask () {
                this.$toast('再来一单')
            },
            // 前往任务大厅
            toTaskHall () {
                this.$router.push({
                    path: '/taskHall',
                    query: {}
                })
            }
        }
	};
</script>
<style lang="less">
	.taskList {
		background: #f0f6fc;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        
        .van-nav-bar {
            background: transparent;
			.van-icon {
				color: #222222;
			}
			.van-nav-bar__title {
				font-size: 16px;
				font-weight: bold;
			}
		}
		.header {
            position: fixed;
            top: 0;
            left: 0;
			background: url(../../images/bgHeader1.png) no-repeat;
			background-size: 100% 100%;
			width: 100%;
			height: 115px;
        }
        .task-box {
            position: relative;
            flex: 1;
            overflow-y: auto;
            .task-card {
                background:rgba(255,255,255,1);  
                width: 94%; margin: 0 auto; 
                margin-top: 10px; 
                border-radius: 8px;
                box-shadow: 3px 3px 6px #ccc;
                .top-name { 
                    display: flex; 
                    align-items: center; 
                    justify-content: space-between; 
                    height: 40px; 
                    .time { 
                        color: #888888; 
                        font-size: 0.3rem; 
                    }
                    .status-name { 
                        font-size: 0.35rem; 
                        font-weight: 400; 
                        color:#00B578 
                    }
                    img { 
                        height: 30px;
                    }
                }
                .task-item-con {
                    .task-item {
                        display: flex;
                        align-items: center;
                        padding: 8px 0;
                        .label {
                            width: 80px;
                            font-weight: bold;
                            font-size: 0.33rem;
                            white-space: nowrap;
                        }
                        .val {
                            font-weight: bold;
                            color: #333;
                            font-size: 0.36rem;
                        }
                        .price {
                            font-weight: bold;
                            color: red;
                            font-size: 0.35rem;
                        }
                        .colon {
                            display: inline-block;
                            color: #333;
                            font-size: 0.32rem;
                        }
                        .block {
                            display: inline-block;
                            width: 22px;
                            color: #fff;
                            font-size: 12px;
                            text-align: center;
                            background-color: #000;
                            border-radius: 4px;
                        }
                    }
                }
                .btn-con {
                    display: flex;
                    align-items: center;
                    padding: 10px 0;
                    .btn {
                       display: flex;
                       align-items: center; 
                       .van-button {
                           height: 30px;
                           padding: 0 12px;
                           margin-left: 10px;
                       }
                    }
                }
            }
        }
        .custom-image {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 80%;
            .van-empty__image {
                width: 90px;
                height: 90px;
            }
        }
         .bottom-button {
            width: 160px;
            height: 40px;
        }
	}
</style>
